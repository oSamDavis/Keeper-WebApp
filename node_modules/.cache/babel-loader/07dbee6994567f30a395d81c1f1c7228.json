{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\Keeper-WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\Keeper-WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import Note from\"./Note\";import CreateArea from\"./CreateArea\";function App(){// the useState hook for updating the list of notes on UI\n// useState() takes in initial state as parameter\n// returns an array containing the state and a setState function\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];// function addNote that adds a created note to list of notes\n// takes in a note from the createArea component\nvar addNote=function addNote(note){setList(function(prevValue){return[].concat(_toConsumableArray(prevValue),[note]);});};// function deleteNote deletes a note from list of notes\n// takes in the note's id\nvar deleteNote=function deleteNote(id){setList(function(prevValue){return prevValue.filter(function(element,index){return index!==id;});});};// function to create a single Note component\nvar createNote=function createNote(noteItem,index){return/*#__PURE__*/React.createElement(Note,{onDelete:deleteNote,key:index,id:index,title:noteItem.title,content:noteItem.content});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(CreateArea,{onAdd:addNote}),list.map(createNote),/*#__PURE__*/React.createElement(Footer,null));}export default App;","map":{"version":3,"sources":["C:/Users/SamDavisJr/Desktop/Web Development/React/Keeper-WebApp/src/components/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateArea","App","list","setList","addNote","note","prevValue","deleteNote","id","filter","element","index","createNote","noteItem","title","content","map"],"mappings":"0YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA;AACA;AACA,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEA;AACA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxBF,OAAO,CAAC,SAACG,SAAD,CAAe,CACrB,mCAAWA,SAAX,GAAsBD,IAAtB,GACD,CAFM,CAAP,CAGD,CAJD,CAMA;AACA;AACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAQ,CACzBL,OAAO,CAAC,SAACG,SAAD,CAAe,CACrB,MAAOA,CAAAA,SAAS,CAACG,MAAV,CAAiB,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAC1C,MAAOA,CAAAA,KAAK,GAAKH,EAAjB,CACD,CAFM,CAAP,CAGD,CAJM,CAAP,CAKD,CAND,CAQA;AACA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAWF,KAAX,CAAqB,CACtC,mBACE,oBAAC,IAAD,EACE,QAAQ,CAAEJ,UADZ,CAEE,GAAG,CAAEI,KAFP,CAGE,EAAE,CAAEA,KAHN,CAIE,KAAK,CAAEE,QAAQ,CAACC,KAJlB,CAKE,OAAO,CAAED,QAAQ,CAACE,OALpB,EADF,CASD,CAVD,CAYA,mBACE,4CACE,oBAAC,MAAD,MADF,cAEE,oBAAC,UAAD,EAAY,KAAK,CAAEX,OAAnB,EAFF,CAGGF,IAAI,CAACc,GAAL,CAASJ,UAAT,CAHH,cAKE,oBAAC,MAAD,MALF,CADF,CASD,CAED,cAAeX,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  // the useState hook for updating the list of notes on UI\n  // useState() takes in initial state as parameter\n  // returns an array containing the state and a setState function\n  const [list, setList] = useState([]);\n\n  // function addNote that adds a created note to list of notes\n  // takes in a note from the createArea component\n  const addNote = (note) => {\n    setList((prevValue) => {\n      return [...prevValue, note];\n    });\n  };\n\n  // function deleteNote deletes a note from list of notes\n  // takes in the note's id\n  const deleteNote = (id) => {\n    setList((prevValue) => {\n      return prevValue.filter((element, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  // function to create a single Note component\n  const createNote = (noteItem, index) => {\n    return (\n      <Note\n        onDelete={deleteNote}\n        key={index}\n        id={index}\n        title={noteItem.title}\n        content={noteItem.content}\n      />\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {list.map(createNote)}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}