{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\keeper-part-3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\keeper-part-3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\keeper-part-3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\SamDavisJr\\\\Desktop\\\\Web Development\\\\React\\\\keeper-part-3\\\\src\\\\components\\\\CreateArea.jsx\";\nimport React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  // useState returns two things in an array:\n  // the state and a function to setState\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1]; // function to handle change event in input and textarea fields\n\n\n  var handleChange = function handleChange(event) {\n    // get the name and new value by destructuring\n    // the element that triggered the event\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; // use the setNote state function to update\n    // the note object. Spread operator is used to get\n    // previous object content and we update based on name of event\n\n    setNote(function (prevValue) {\n      return _objectSpread(_objectSpread({}, prevValue), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    S: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"title\",\n    placeholder: \"Title\",\n    value: note.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleChange,\n    name: \"content\",\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    value: note.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(event) {\n      // passing our note to parent component via a prop function\n      // also resetting both fields and avoid a default page refresh\n      props.onAdd(note);\n      setNote({\n        title: \"\",\n        content: \"\"\n      });\n      event.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["C:/Users/SamDavisJr/Desktop/Web Development/React/keeper-part-3/src/components/CreateArea.jsx"],"names":["React","useState","CreateArea","props","title","content","note","setNote","handleChange","event","target","name","value","prevValue","onAdd","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB;AACA;AACA,kBAAwBF,QAAQ,CAAC;AAAEG,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb,iBAHyB,CAKzB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACA;AACA,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd,CAH8B,CAK9B;AACA;AACA;;AACAL,IAAAA,OAAO,CAAC,UAACM,SAAD,EAAe;AACrB,6CACKA,SADL,2BAEGF,IAFH,EAEUC,KAFV;AAID,KALM,CAAP;AAMD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,CAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAEJ,YADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEF,IAAI,CAACF,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,QAAQ,EAAEI,YADZ;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,IAAI,EAAC,GAJP;AAKE,IAAA,KAAK,EAAEF,IAAI,CAACD,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE;AACE,IAAA,OAAO,EAAE,iBAACI,KAAD,EAAW;AAClB;AACA;AACAN,MAAAA,KAAK,CAACW,KAAN,CAAYR,IAAZ;AACAC,MAAAA,OAAO,CAAC;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE;AAAtB,OAAD,CAAP;AACAI,MAAAA,KAAK,CAACM,cAAN;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdF,CADF,CADF;AA8BD;;AAED,eAAeb,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  // useState returns two things in an array:\n  // the state and a function to setState\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\n\n  // function to handle change event in input and textarea fields\n  const handleChange = (event) => {\n    // get the name and new value by destructuring\n    // the element that triggered the event\n    const { name, value } = event.target;\n\n    // use the setNote state function to update\n    // the note object. Spread operator is used to get\n    // previous object content and we update based on name of event\n    setNote((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  };\n\n  return (\n    <div>\n      <form className=\"create-note\" S>\n        <input\n          onChange={handleChange}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={note.title}\n        />\n        <textarea\n          onChange={handleChange}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={note.content}\n        />\n        <button\n          onClick={(event) => {\n            // passing our note to parent component via a prop function\n            // also resetting both fields and avoid a default page refresh\n            props.onAdd(note);\n            setNote({ title: \"\", content: \"\" });\n            event.preventDefault();\n          }}\n        >\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}